{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/blog/UPMScopeRegistory",
    "result": {"data":{"post":{"slug":"/blog/UPMScopeRegistory","title":"UPM custom Scope Registery-(Google Cloud)","date":"20.06.2023","tags":[{"name":"Unity development","slug":"unity-development"},{"name":"Code management and collaboration","slug":"code-management-and-collaboration"}],"description":"Several useful ADB commands that might be useful","canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"UPM custom Scope Registery-(Google Cloud)\",\n  \"description\": \"Several useful ADB commands that might be useful\",\n  \"date\": \"2023-06-20T00:00:00.000Z\",\n  \"slug\": \"/blog/UPMScopeRegistory\",\n  \"tags\": [\"Unity development\", \"Code management and collaboration\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A while ago Unity introduced its\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.unity3d.com/Packages/com.unity.package-manager-ui@1.8/manual/index.html\"\n  }, \"Package Manager\"), \", a nice and simple way to bring\\xA0reusable packages\\xA0into a project while keeping track of\\xA0dependencies\\xA0and compatible Unity\\xA0versions.\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/package_overview.png\",\n    \"width\": \"50%\",\n    \"alt\": \"package_overview.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 1 Package manager overview\\n  \\t\")), mdx(\"p\", null, \"How great would it be if we could use this system for our own\\xA0reusable assets, if we could store them\\xA0on our own server\\xA0****and have them show up in the package manager too?\"), mdx(\"p\", null, \"Well, as it turns out\\xA0we can\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"!\\xA0*\"), \"(since Unity 2018.3+)*\"), mdx(\"p\", null, \"Unity is using a normal\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"npm package server\"), \"\\xA0to serve their packages. So we can simply set up\\xA0our own npm package server, hook it into the\\xA0project manifest,\\xA0and have the package manager serve our own packages in addition to the ones from Unity!\"), mdx(\"p\", null, \"Unity is using\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jfrog.com/artifactory/\"\n  }, \"Artifactory\"), \", but we\\u2019re going to install\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://verdaccio.org/en/\"\n  }, \"Verdaccio\"), \"\\xA0(a lightweight and\\xA0free\\xA0npm registry server)! We\\u2019ll put it on a\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Micro\"), \"\\xA0Instance\"), \"\\xA0on the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Google\"), \"\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cloud\\xA0Compute Engine\"), \" (but you could just as well have it run in any other cloud, on your \\u2197\\uFE0F \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://markus.hofer.rocks/s/dfb006f522964df1a3633ef98341ac9e\"\n  }, \"local NAS\"), \", or even on your local PC). Let me walk you through it\\u2026\"), mdx(\"h1\", null, \"1. Creating a server instance\"), mdx(\"p\", null, \"Go to your\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://console.cloud.google.com/home/dashboard\"\n  }, \"Google Cloud Platform Console\"), \", choose\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Compute Engine\"), \"\\xA0>\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://console.cloud.google.com/compute/instances\"\n  }, \"VM Instances\"), \",\"), \"\\xA0and click on\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"CREATE INSTANCE.\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/VM_Instance.png\",\n    \"width\": \"50%\",\n    \"alt\": \"VM_Instance.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 2 Create a VM instance\\n  \\t\")), mdx(\"p\", null, \"Give it a\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"name\"), \", choose a\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"region\"), \", select\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"micro\"), \"\\xA0as the machine type, and click\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Create\"), \"\\xA0to create your Debian 9 Linux Server with 10GB of storage. Notice how it estimates the monthly cost as $4.28 - and that\\u2019s indeed pretty close to what I\\u2019m paying for it per month. With our instance created and running, we\\u2019ll now connect to it by clicking on\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"SSH.\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/VM_Instance_Detial.png\",\n    \"width\": \"50%\",\n    \"alt\": \"VM_Instance_Detial.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 3 Connect to your new instance\\n  \\t\")), mdx(\"p\", null, \"This will open up a\\xA0Linux terminal\\xA0in a browser window\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/Linux_VM.png\",\n    \"width\": \"50%\",\n    \"alt\": \"Linux_VM.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 4 This is how we talk to our Debian Linux server\\n  \\t\")), mdx(\"h1\", null, \"2. Installing and Configuring Verdaccio Prerequisites\"), mdx(\"h2\", null, \"2.1 Install node js and npm\"), mdx(\"p\", null, \"Now we\\u2019ll install or own\\xA0package server, Verdaccio. We want to do this as the root user, so we\\u2019re going to create a password for the root:\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ sudo passwd\"), \"Think of a password and enter it. And enter it again. Now log in as the root (su = superuser = root):\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ su\"), \"It asks for the password you just set, enter it and you should now be logged in as the root user! Next, we\\u2019ll\\xA0install NodeJS and npm\\xA0(the node package manager)\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$\\xA0curl -sL\\xA0https://deb.nodesource.com/setup_18.x\\xA0| bash -\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ apt-get install -y nodejs\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/node_npm.png\",\n    \"width\": \"50%\",\n    \"alt\": \"node_npm.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 5 nodejs and npm are installed!\\n  \\t\")), mdx(\"p\", null, \"For both these steps you\\u2019ll see it installing things, no errors should come up. To verify that both node js and npm are installed correctly you can check their versions like this:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ node -v\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ npm -v\")), mdx(\"p\", null, \"If each command shows you a version, then it worked!\"), mdx(\"h2\", null, \"2.2 Installing Verdaccio\"), mdx(\"p\", null, \"Now we\\u2019re ready to\\xA0install Verdaccio!\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ npm install --global verdaccio\")), mdx(\"p\", null, \"Let it install. Once it\\u2019s done switch back out of super-user mode by either pressing\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CTRL+D\"), \"\\xA0or typing\\xA0exit, because while we wanted to\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"install\"), \"\\xA0it as the root user, we want to\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"run\"), \"\\xA0it as a normal user.\"), mdx(\"p\", null, \"We\\u2019ll configure it in a second, but first, we need to run it to make sure it generates its config file.\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ verdaccio\"), \"Then press\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CTRL+C\"), \"\\xA0to kill it and we\\u2019re ready to change the\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"config\"), \"\\xA0file!\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ cd verdaccio $ vim config.yaml\"), \"This opens the\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"config.yaml\"), \"\\xA0file in the\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.howtoforge.com/vim-basics\"\n  }, \"VIM\"), \"\\xA0text editor. All we need to do is add two lines to tell verdaccio to listen to all signals from everywhere as long as they come through port 4873:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"listen:\\n   - 0.0.0.0:4873 \\n\")), mdx(\"p\", null, \"Press\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"i\")), \"\\xA0for\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"insert\"), \". Add the two lines, then press\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ESC\"), \"\\xA0to come back to\\xA0command mode. Now type\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \":x\")), \"\\xA0and press\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Enter\"), \"\\xA0to save the file and quit VIM.\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/verdaccio_config.png\",\n    \"width\": \"50%\",\n    \"alt\": \"verdaccio_config.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 6 Verdaccio Config \\n\")), mdx(\"p\", null, \"Let\\u2019s\\xA0run verdaccio!\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ verdaccio\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/verdaccio_running.png\",\n    \"width\": \"50%\",\n    \"alt\": \"verdaccio_running.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 7  Verdaccio Running\\n  \\t\")), mdx(\"p\", null, \"Verdaccio is running on port 4873!\"), mdx(\"h2\", null, \"2.3 Setting up Firewall\"), mdx(\"p\", null, \"Now we need to tell the firewall around our server instance to unblock port 4873 so we can communicate with Verdaccio from the outside! Go to the\\xA0Google Cloud Platform Console\\xA0> VPC network >\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://console.cloud.google.com/networking/firewalls/list\"\n  }, \"Firewall rules\"), \"\\xA0and click\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Create Firewall Rule.\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/Firewall_rule.png\",\n    \"width\": \"50%\",\n    \"alt\": \"Firewall_rule.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 8 Add a Rule to the Firewall\\n  \\t\")), mdx(\"p\", null, \"We want to create a rule that\\xA0allows\\xA0incoming traffic (Ingress) from all possible IPs (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"0.0.0.0/0\"), \") for\\xA0TCP\\xA0port\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4873.\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/Firewall.png\",\n    \"width\": \"50%\",\n    \"alt\": \"Firewall_rule.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 9 Firewall settings\\n  \\t\")), mdx(\"p\", null, \"I marked the important bits in yellow. Turns out most of the bits were important\\u2026And we\\u2019re done installing! Verdaccio is running and accessible from the outside world! Point your web browser to\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"http://\", \"[your server\\u2019s IP]\", \":4873\"), \"\\xA0and you should see this:\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/verdaccio_running.png\",\n    \"width\": \"50%\",\n    \"alt\": \"verdaccio_running.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 10 Verdaccio is running, but empty\\n  \\t\")), mdx(\"h2\", null, mdx(\"strong\", {\n    parentName: \"h2\"\n  }, \"2.4\"), \" Keeping Verdaccio alive\"), mdx(\"p\", null, \"Nice!\\xA0The only problem is:\\xA0As soon as we close the console window, Verdaccio gets shut down\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \",\"), \"\\xA0so we have to work around that with a little tool called\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://kb.iu.edu/d/acuy\"\n  }, \"screen\"), \"!\"), \"\\xA0(should be installed, if it\\u2019s not you can get it with\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"sudo apt-get install screen\")), \") Press\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"CTRL\"), \"+\", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"C\")), \"\\xA0to kill Verdaccio and type\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ screen\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/verdaccio_screen.png\",\n    \"width\": \"50%\",\n    \"alt\": \"verdaccio_screen.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 11 Keep Verdaccio alive\\n  \\t\")), mdx(\"p\", null, \"This opens up a new virtual\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"screen\"), \", a kind of safe place, which is where we will now launch Verdaccio:\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ verdaccio\"), \"Then we simply press\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"CTRL\"), \"+\", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"A\")), \"\\xA0and\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"CTRL\"), \"+\", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"D\")), \"\\xA0to\\xA0detach the screen session\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".\"), \" It\\u2019s still running in the background with Verdaccio safe and sound inside it and we can even get back to it at any time by typing\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"screen -r\")), \", but most importantly we can now\\xA0close our terminal window without killing Verdaccio! Now we\\u2019re ready to create users, add packages, and hook it up into Unity!\"), mdx(\"h1\", null, \"3. Creating a user\"), mdx(\"p\", null, \"Let\\u2019s open PowerShell (or something similar) on our local machine and create a user! (You\\u2019ll need npm for this \\u2014 if it\\u2019s not installed you can get the installer\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/get-npm\"\n  }, \"here\"), \"\\xA0\\u2014 remember how to check if it\\u2019s installed? Works here too!) \"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm adduser --registry http://[Server IP]:4873\")), mdx(\"p\", null, \"Enter a\\xA0username,\\xA0password,\\xA0and\\xA0email address\\xA0and you should be created and logged in!\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/create_username.png\",\n    \"width\": \"50%\",\n    \"alt\": \"create_username.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 12 Create a user\\n  \\t\")), mdx(\"p\", null, \"User created! Later on, you can log back in with \"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm login --registry http://[Server IP]:4873\")), mdx(\"h1\", null, \"4. Creating and uploading packages\"), mdx(\"p\", null, \"The process for this is simple: Put all the files into a folder, add a\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"package.json\"), \"\\xA0file that holds all the relevant information, and upload everything via npm! I recommend having that folder in a Unity project because the resulting package will not work if a meta file is missing, and having it inside Unity makes it easy for you to see if everything is in order. Let\\u2019s add a\\xA0\\xA0file to the root of the folder that looks like this:\\xA0for a package\\xA0without\\xA0dependencies. Note how you can define a required unity version, description, and\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.unity3d.com/Packages/com.unity.package-manager-ui@1.8/manual/index.html#PackManManifestsProject\"\n  }, \"other things\"), \". You could even add a README.md file. You also need to have\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://markus.hofer.rocks/s/b20f0efd4bf34b358b2ddb869e6378d0\"\n  }, \"assembly definition files\")), \"\\xA0in there or it will not compile (as the actual files will reside outside the Assets folder), so make sure those are set up correctly! \"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/package_overview.png\",\n    \"width\": \"50%\",\n    \"alt\": \"package_overview.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 13 A package example\\n  \\t\")), mdx(\"p\", null, \"Your final folder could look like this. Once it\\u2019s all set, go to the folder you want to\\xA0publish\\xA0in PowerShell and do:\"), mdx(\"p\", null, \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm publish --registry http://[Server-IP]:4873\")), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/npm_publish.png\",\n    \"width\": \"50%\",\n    \"alt\": \"npm_publish.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 14 To publish npm package\\n  \\t\")), mdx(\"p\", null, \"npm and verdaccio will do the rest and\\xA0your package will now be visible on verdaccio\\u2019s web interface!\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/Verdaccio_interface.png\",\n    \"width\": \"50%\",\n    \"alt\": \"Verdaccio_interface.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 15 Package uploaded!\\n  \\t\")), mdx(\"h3\", null, \"Updates\"), mdx(\"p\", null, \"If you want to release an update to your package, simply increase the\\xA0version\\xA0in your\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"package.json\"), \"\\xA0file and publish the same way! Verdaccio will keep the entire history of your packages so dependencies will always bring in a compatible version.\"), mdx(\"h3\", null, \"Unpublish (remove) a package from the server\"), mdx(\"p\", null, \"You can get rid of packages too. This will remove all versions and get rid of the package entirely:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm unpublish --force at.blackish.testpackage --registry http://125.138.25.12:4873\")), mdx(\"h1\", null, \"5. Setup scope registry in Packages\"), mdx(\"p\", null, \"Now there\\u2019s only one last thing to do:\\xA0Get the Package Manager to talk to Verdaccio\\xA0****and show our custom packages!  And you can hook it up in the Editor>Project Setting>Package Manager, and you can also define the scope to get access to different categories.\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/scope_registry.png\",\n    \"width\": \"50%\",\n    \"alt\": \"scope_registry.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 16 Unity Scope registry\\n  \\t\")), mdx(\"h1\", null, \"6. Restricting access\"), mdx(\"p\", null, \"At the moment\\xA0everyone\\xA0who knows the\\xA0IP address\\xA0of our server can\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"create\"), \"\\xA0users,\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"get\"), \"\\xA0packages,\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"add\"), \"\\xA0packages and even\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"delete\"), \"\\xA0packages. That\\u2019s not exactly ideal. I should probably look into that\\u2026Just kidding, I \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"did\"), \" look into that. The simplest way to at least stop everyone from uploading and deleting packages is to\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"restrict registration\"), \". Once all your users have registered you can simply set\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"max_users: -1\"), \"\\xA0in the\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"config\"), \"\\xA0file and no one can register anymore. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"All your user data is stored in the\\xA0\", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"htpasswd\"), \"\\xA0file, so you could even set up all users by hand (tools like\\xA0\", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"http://www.htaccesstools.com/htpasswd-generator/\"\n  }, \"this one\"), \"\\xA0can help you md5-hash your passwords) and having registration disabled from the start.\")), mdx(\"h3\", null, \"Reserve a static IP address\"), mdx(\"p\", null, \"The way we have set it up the external IP address of our server instance changes every time we stop and start the server. We don\\u2019t plan to do this very often, but it might still be a good idea to go to VPC network >\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://console.cloud.google.com/networking/addresses/list\"\n  }, \"External IP addresses\"), \"\\xA0and switch the type of our IP address from\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ephemeral\"), \"\\xA0to\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Static\"), \".\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/reserve_static_ip.png\",\n    \"width\": \"50%\",\n    \"alt\": \"reserve_static_ip.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 17 Reserve static IP\\n  \\t\")), mdx(\"p\", null, \"Google is only charging for reserved IP addresses that are\\xA0not in use, so if you have your server running continuously, it should not add any extra cost.\\xA0But\\xA0if it\\u2019s not in use the reserved IP will cost $0.010 per hour \\u2014 almost twice as much as the $0.006 per hour it costs to run our micro instance. Keep that in mind\\u2026\"), mdx(\"h3\", null, \"Remove Uplinks\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://verdaccio.org/docs/en/uplinks\"\n  }, \"Uplinks\"), \"\\xA0are a way to connect Verdaccio to other npm registries. If a package is not found on your server it would then look in those other places and potentially cache it locally. This feature has potential, but I\\u2019m pretty sure we don\\u2019t want our server to look for\\xA0unity\\xA0packages on the\\xA0npmjs\\xA0registry, so let\\u2019s comment that out for now:\"), mdx(\"left\", null, \"\\n    \", mdx(\"img\", {\n    parentName: \"left\",\n    \"style\": {\n      \"borderRadius\": \"0.1125em\",\n      \"boxShadow\": \"0 2px 1px 0 rgba(34,36,38,.12),0 2px 5px 0 rgba(34,36,38,.08)\"\n    },\n    \"src\": \"https://cdn.jsdelivr.net/gh/Big-Bro222/StaticFileServer/big-bro222.github.io/posts/upm-custom-scope-registory/remove_uplink.png\",\n    \"width\": \"50%\",\n    \"alt\": \"remove_uplink.png\"\n  }), \"\\n    \", mdx(\"br\", {\n    parentName: \"left\"\n  }), \"\\n    \", mdx(\"div\", {\n    parentName: \"left\",\n    \"style\": {\n      \"color\": \"#999\",\n      \"borderBottom\": \"1px solid #d9d9d9\",\n      \"display\": \"inline-block\"\n    }\n  }, \"\\n    Figure 18 Little use looking for unity packages on the npmjs registry\\u2026\\n  \\t\")), mdx(\"p\", null, \"Apart from that, You can also set up a CI for package management. Here is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://verdaccio.org/docs/github-actions/\"\n  }, \"link\"), \" for GitHub Action for Verdaccio. I am still work on that, might write a blog about that in the near future.\"), mdx(\"h1\", null, \"Reference\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.github.com/en/actions\"\n  }, \"https://docs.github.com/en/actions\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://verdaccio.org/\"\n  }, \"https://verdaccio.org/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://verdaccio.org/docs/github-actions/\"\n  }, \"https://verdaccio.org/docs/github-actions/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://markus.hofer.rocks/package-server-google-cloud\"\n  }, \" https://markus.hofer.rocks/package-server-google-cloud\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"A while ago Unity introduced its  Package Manager , a nice and simple way to bring reusable packages into a project while keeping track of…","timeToRead":6,"banner":null}},"pageContext":{"slug":"/blog/UPMScopeRegistory","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}