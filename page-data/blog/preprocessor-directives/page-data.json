{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/blog/preprocessor-directives",
    "result": {"data":{"post":{"slug":"/blog/preprocessor-directives","title":"Preprocessor directives(C# and Unity)","date":"12.04.2022","tags":[{"name":"Unity development","slug":"unity-development"}],"description":"Preprocessor directives(C# and Unity)","canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Preprocessor directives(C# and Unity)\",\n  \"description\": \"Preprocessor directives(C# and Unity)\",\n  \"date\": \"2022-04-12T00:00:00.000Z\",\n  \"slug\": \"/blog/preprocessor-directives\",\n  \"tags\": [\"Unity development\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"1.C# preprocessor directives\"), mdx(\"h2\", null, \"Defining symbols\"), mdx(\"p\", null, \"You use the following two preprocessor directives to define or undefine symbols for conditional compilation\\uFF0C these is mostly combine will the conditional compilation:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#define\"), \": Define a symbol.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#undef\"), \": Undefine a symbol.\")), mdx(\"h2\", null, \"Conditional compilation\"), mdx(\"p\", null, \"You use four preprocessor directives to control conditional compilation:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#if\"), \": Opens a conditional compilation, where code is compiled only if the specified symbol is defined.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#elif\"), \": Closes the preceding conditional compilation and opens a new conditional compilation based on if the specified symbol is defined.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#else\"), \": Closes the preceding conditional compilation and opens a new conditional compilation if the previous specified symbol isn't defined.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#endif\"), \": Closes the preceding conditional compilation.\")), mdx(\"p\", null, \"You can use the operators\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"==\"), \"\\xA0(equality)]and\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"!=\"), \"\\xA0(inequality)]to test for the\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bool\"), \"\\nvalues\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \"or\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \".\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \"means the symbol is defined. The statement\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#if DEBUG\"), \"\\n\\xA0has the same meaning as\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#if (DEBUG == true)\"), \". You can use the\\xA0[&&`\\xA0\\n\\xA0operators to evaluate whether multiple symbols have been defined. You can also group symbols and operators with parentheses.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"#define MYTEST\\nusing System;\\npublic class MyClass\\n{\\n    static void Main()\\n    {\\n#if (DEBUG && !MYTEST)\\n        Console.WriteLine(\\\"DEBUG is defined\\\");\\n#elif (!DEBUG && MYTEST)\\n        Console.WriteLine(\\\"MYTEST is defined\\\");\\n#elif (DEBUG && MYTEST)\\n        Console.WriteLine(\\\"DEBUG and MYTEST are defined\\\");  \\n#else\\n        Console.WriteLine(\\\"DEBUG and MYTEST are not defined\\\");\\n#endif\\n    }\\n}\\n\")), mdx(\"h2\", null, \"Defining regions\"), mdx(\"p\", null, \"You can define regions of code that can be collapsed in an outline using the following two preprocessor directives: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#region\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#endregion\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"#region MyClass definition\\npublic class MyClass\\n{\\n    static void Main()\\n    {\\n    }\\n}\\n#endregion\\n\")), mdx(\"h2\", null, \"Error and warning information\"), mdx(\"p\", null, \"You instruct the compiler to generate user-defined compiler errors and warnings, and control line information using the following directives:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#error\"), \": Generate a compiler error with a specified message.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#warning\"), \": Generate a compiler warning, with a specific message.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#line\"), \": Change the line number printed with compiler messages.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"#error Deprecated code in this method.\\n\\n#warning Deprecated code in this method.\\n\")), mdx(\"h2\", null, \"Pragmas\"), mdx(\"p\", null, \"This has been used in shaders to define the function name of vertex shader and fragment shader\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"#pragma pragma-name pragma-arguments\\n\")), mdx(\"h1\", null, \"2.Unity Platform #define directives\"), mdx(\"h2\", null, \"2.1 Platform\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Property:\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function:\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_EDITOR\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for calling Unity Editor scripts from your game code.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_EDITOR_WIN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for Editor code on Windows.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_EDITOR_OSX\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for Editor code on Mac OS X.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_STANDALONE_OSX\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for compiling/executing code specifically for Mac OS X (including Universal, PPC and Intel architectures).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_STANDALONE_WIN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for compiling/executing code specifically for Windows standalone applications.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_STANDALONE_LINUX\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for compiling/executing code specifically for Linux standalone applications.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_STANDALONE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for compiling/executing code for any standalone platform (Mac OS X, Windows or Linux).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_WII\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for compiling/executing code for the Wii console.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_IOS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for compiling/executing code for the iOS platform.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_IPHONE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Deprecated. Use\\xA0UNITY_IOS\\xA0instead.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_ANDROID\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for the Android platform.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_PS4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for running\\xA0PlayStation 4\\xA0code.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_XBOXONE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for executing\\xA0Xbox One\\xA0code.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_TIZEN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for the Tizen platform.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_TVOS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for the Apple TV platform.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_WSA\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for\\xA0Universal Windows Platform. Additionally,\\xA0NETFX_CORE\\xA0is defined when compiling C# files against .NET Core and using .NET\\xA0scripting backend.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_WSA_10_0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for Universal Windows Platform. Additionally\\xA0WINDOWS_UWP\\xA0is defined when compiling C# files against .NET Core.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_WINRT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Same as\\xA0UNITY_WSA.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_WINRT_10_0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Equivalent to\\xA0UNITY_WSA_10_0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_WEBGL\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for\\xA0WebGL.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_FACEBOOK\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for the Facebook platform (WebGL or Windows standalone).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_ADS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for calling Unity Ads methods from your game code. Version 5.2 and above.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_ANALYTICS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for calling Unity\\xA0Analytics\\xA0methods from your game code. Version 5.2 and above.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_ASSERTIONS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for assertions control process.\")))), mdx(\"h2\", null, \"2.2 Unity versions\"), mdx(\"p\", null, \"UNITY_X,\\xA0UNITY_X_Y and\\xA0UNITY_X_Y_Z. for any unity release version\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Property:\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function:\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_5\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for the release version of Unity 5, exposed in every 5.X.Y release.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_5_0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for the major version of Unity 5.0, exposed in every 5.0.Z release.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UNITY_5_0_1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"#define directive for the minor version of Unity 5.0.1.\")))), mdx(\"h2\", null, \"2.3 Others\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Property:\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Property:\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CSHARP_7_3_OR_NEWER\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defined when building scripts with support for C# 7.3 or newer.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ENABLE_MONO\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Scripting backend #define for Mono.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ENABLE_IL2CPP\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Scripting backend #define for\\xA0IL2CPP.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"NET_2_0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defined when building scripts against .NET 2.0 API compatibility level on Mono and IL2CPP.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"NET_2_0_SUBSET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defined when building scripts against .NET 2.0 Subset API compatibility level on Mono and IL2CPP.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"NET_LEGACY\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defined when building scripts against .NET 2.0 or .NET 2.0 Subset API compatibility level on Mono and IL2CPP.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"NET_4_6\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defined when building scripts against .NET 4.x API compatibility level on Mono and IL2CPP.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"NET_STANDARD_2_0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defined when building scripts against .NET Standard 2.0 API compatibility level on Mono and IL2CPP.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ENABLE_WINMD_SUPPORT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defined when Windows Runtime support is enabled on IL2CPP. See\\xA0Windows Runtime Support\\xA0for more details.\")))), mdx(\"p\", null, \"Note: Remember to validate the code before compiling if it\\u2019s not included in the current editor context. Or it will cause errors when building the application.\"), mdx(\"p\", null, \"It is also possible to add to the built-in selection of #define directives by supplying your own. Open the\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Other Settings\"), \"\\xA0panel of the\\xA0Player settings and navigate to the\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Scripting Define Symbols\"), \"\\n\\xA0text box.\"), mdx(\"h1\", null, \"Reference\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.unity3d.com/2019.1/Documentation/Manual/PlatformDependentCompilation.html\"\n  }, \"https://docs.unity3d.com/2019.1/Documentation/Manual/PlatformDependentCompilation.html\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives\"\n  }, \"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"1.C# preprocessor directives Defining symbols You use the following two preprocessor directives to define or undefine symbols for…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/blog/preprocessor-directives","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}